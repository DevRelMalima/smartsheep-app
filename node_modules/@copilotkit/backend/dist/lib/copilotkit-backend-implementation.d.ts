import { Action, AnnotatedFunction, ToolDefinition } from '@copilotkit/shared';
import { CopilotKitServiceAdapter } from '../types/service-adapter.js';
import { RemoteChain } from '../types/langserve.js';

interface CopilotBackendImplementationConstructorParams {
    actions?: Action<any>[] | AnnotatedFunction<any>[];
    langserve?: RemoteChain[];
    debug?: boolean;
}
declare class CopilotBackendImplementation {
    private actions;
    private langserve;
    private debug;
    constructor(params?: CopilotBackendImplementationConstructorParams);
    addAction(action: Action<any> | AnnotatedFunction<any>): void;
    removeAction(actionName: string): void;
    removeBackendOnlyProps(forwardedProps: any): void;
    private getResponse;
    response(req: Request, serviceAdapter: CopilotKitServiceAdapter): Promise<Response>;
    streamHttpServerResponse(req: any, res: any, serviceAdapter: CopilotKitServiceAdapter, headers?: Record<string, string>): Promise<void>;
}
declare function mergeServerSideTools(serverTools: ToolDefinition[], clientTools?: ToolDefinition[]): ToolDefinition[];

export { CopilotBackendImplementation, mergeServerSideTools };
