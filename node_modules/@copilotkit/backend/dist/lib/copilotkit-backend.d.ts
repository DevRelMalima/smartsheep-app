import { Parameter, Action, AnnotatedFunction } from '@copilotkit/shared';
import { CopilotBackendImplementation } from './copilotkit-backend-implementation.js';
import { RemoteChain } from '../types/langserve.js';
import '../types/service-adapter.js';

interface CopilotBackendConstructorParams<T extends Parameter[] | [] = []> {
    actions?: Action<T>[];
    langserve?: RemoteChain[];
    debug?: boolean;
}
interface CopilotDeprecatedBackendConstructorParams<T extends Parameter[] | [] = []> {
    actions?: AnnotatedFunction<any>[];
    langserve?: RemoteChain[];
    debug?: boolean;
}
declare class CopilotBackend<const T extends Parameter[] | [] = []> extends CopilotBackendImplementation {
    constructor(params?: CopilotBackendConstructorParams<T>);
    constructor(params?: CopilotDeprecatedBackendConstructorParams<T>);
    addAction<const T extends Parameter[] | [] = []>(action: Action<T>): void;
    /** @deprecated Use addAction with Action<T> instead. */
    addAction(action: AnnotatedFunction<any>): void;
}

export { CopilotBackend };
