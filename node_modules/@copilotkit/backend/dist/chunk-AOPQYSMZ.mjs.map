{"version":3,"sources":["../src/lib/copilotkit-backend.ts"],"sourcesContent":["import {\n  Action,\n  AnnotatedFunction,\n  Parameter,\n} from \"@copilotkit/shared\";\nimport { CopilotBackendImplementation } from \"./copilotkit-backend-implementation\";\nimport { RemoteChain } from \"../types\";\n\ninterface CopilotBackendConstructorParams<T extends Parameter[]| [] = []> {\n  actions?: Action<T>[];\n  langserve?: RemoteChain[];\n  debug?: boolean;\n}\n\ninterface CopilotDeprecatedBackendConstructorParams<T extends Parameter[]| [] = []> {\n  actions?: AnnotatedFunction<any>[];\n  langserve?: RemoteChain[];\n  debug?: boolean;\n}\n\n\nexport class CopilotBackend<const T extends Parameter[]| [] = []> extends CopilotBackendImplementation {\n  constructor(params?: CopilotBackendConstructorParams<T>);\n  // @deprecated use Action<T> instead of AnnotatedFunction<T>\n  constructor(params?: CopilotDeprecatedBackendConstructorParams<T>);\n  constructor(params?: CopilotBackendConstructorParams<T> | CopilotDeprecatedBackendConstructorParams<T>) {\n    super(params);\n  }\n\n  // Prettier chokes on the `const` in the function signature\n  // To have the main implementation checked by prettier, we split \n  // this into a separate file\n  // prettier-ignore\n  addAction<const T extends Parameter[] | [] = []>(action: Action<T>): void;\n  /** @deprecated Use addAction with Action<T> instead. */\n  addAction(action: AnnotatedFunction<any>): void;\n  addAction<const T extends Parameter[] | [] = []>(action: Action<T> | AnnotatedFunction<any>): void {\n    super.addAction(action);\n  }\n}\n"],"mappings":";;;;;AAqBO,IAAM,iBAAN,cAAmE,6BAA6B;AAAA,EAIrG,YAAY,QAA4F;AACtG,UAAM,MAAM;AAAA,EACd;AAAA,EASA,UAAiD,QAAkD;AACjG,UAAM,UAAU,MAAM;AAAA,EACxB;AACF;","names":[]}