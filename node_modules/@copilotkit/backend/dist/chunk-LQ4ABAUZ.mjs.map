{"version":3,"sources":["../src/lib/copilotkit-backend-implementation.ts"],"sourcesContent":["import {\n  Action,\n  ToolDefinition,\n  EXCLUDE_FROM_FORWARD_PROPS_KEYS,\n  actionToChatCompletionFunction,\n  Parameter,\n  AnnotatedFunction,\n  annotatedFunctionToAction,\n} from \"@copilotkit/shared\";\nimport { copilotkitStreamInterceptor, remoteChainToAction } from \"../utils\";\nimport { RemoteChain, CopilotKitServiceAdapter } from \"../types\";\n\ninterface CopilotBackendResult {\n  stream: ReadableStream;\n  headers?: Record<string, string>;\n}\n\ninterface CopilotBackendImplementationConstructorParams {\n  actions?: Action<any>[] | AnnotatedFunction<any>[];\n  langserve?: RemoteChain[];\n  debug?: boolean;\n}\n\nexport class CopilotBackendImplementation {\n  private actions: Action<any>[] = [];\n  private langserve: Promise<Action<any>>[] = [];\n  private debug: boolean = false;\n\n  constructor(params?: CopilotBackendImplementationConstructorParams) {\n    for (const action of params?.actions || []) {\n      if (\"argumentAnnotations\" in action) {\n        this.actions.push(annotatedFunctionToAction(action));\n      } else {\n        this.actions.push(action);\n      }\n    }\n    for (const chain of params?.langserve || []) {\n      this.langserve.push(remoteChainToAction(chain));\n    }\n    this.debug = params?.debug || false;\n  }\n\n  addAction(action: Action<any> | AnnotatedFunction<any>): void {\n    this.removeAction(action.name);\n    if (\"argumentAnnotations\" in action) {\n      this.actions.push(annotatedFunctionToAction(action));\n    } else {\n      this.actions.push(action);\n    }\n  }\n\n  removeAction(actionName: string): void {\n    this.actions = this.actions.filter((f) => f.name !== actionName);\n  }\n\n  removeBackendOnlyProps(forwardedProps: any): void {\n    // Get keys backendOnlyPropsKeys in order to remove them from the forwardedProps\n    const backendOnlyPropsKeys = forwardedProps[EXCLUDE_FROM_FORWARD_PROPS_KEYS];\n    if (Array.isArray(backendOnlyPropsKeys)) {\n      backendOnlyPropsKeys.forEach((key) => {\n        const success = Reflect.deleteProperty(forwardedProps, key);\n        if (!success) {\n          console.error(`Failed to delete property ${key}`);\n        }\n      });\n      // After deleting individual backend-only properties, delete the EXCLUDE_FROM_FORWARD_PROPS_KEYS property itself from forwardedProps\n      const success = Reflect.deleteProperty(forwardedProps, EXCLUDE_FROM_FORWARD_PROPS_KEYS);\n      if (!success) {\n        console.error(`Failed to delete EXCLUDE_FROM_FORWARD_PROPS_KEYS`);\n      }\n    } else if (backendOnlyPropsKeys) {\n      console.error(\"backendOnlyPropsKeys is not an array\");\n    }\n  }\n\n  private async getResponse(\n    forwardedProps: any,\n    serviceAdapter: CopilotKitServiceAdapter,\n  ): Promise<CopilotBackendResult> {\n    this.removeBackendOnlyProps(forwardedProps);\n    const langserveFunctions: Action<any>[] = [];\n\n    for (const chainPromise of this.langserve) {\n      try {\n        const chain = await chainPromise;\n        langserveFunctions.push(chain);\n      } catch (error) {\n        console.error(\"Error loading langserve chain:\", error);\n      }\n    }\n\n    // merge server side functions with langserve functions\n    let mergedTools = mergeServerSideTools(\n      this.actions.map(actionToChatCompletionFunction),\n      langserveFunctions.map(actionToChatCompletionFunction),\n    );\n\n    // merge with client side functions\n    mergedTools = mergeServerSideTools(mergedTools, forwardedProps.tools);\n\n    try {\n      const result = await serviceAdapter.getResponse({\n        ...forwardedProps,\n        tools: mergedTools,\n      });\n      const stream = copilotkitStreamInterceptor(\n        result.stream,\n        [...this.actions, ...langserveFunctions],\n        this.debug,\n      );\n      return { stream, headers: result.headers };\n    } catch (error) {\n      console.error(\"Error getting response:\", error);\n      throw error;\n    }\n  }\n\n  async response(req: Request, serviceAdapter: CopilotKitServiceAdapter): Promise<Response> {\n    try {\n      const response = await this.getResponse(await req.json(), serviceAdapter);\n      return new Response(response.stream, { headers: response.headers });\n    } catch (error: any) {\n      return new Response(\"\", { status: 500, statusText: error.message });\n    }\n  }\n\n  async streamHttpServerResponse(\n    req: any,\n    res: any,\n    serviceAdapter: CopilotKitServiceAdapter,\n    headers?: Record<string, string>,\n  ) {\n    const bodyParser = new Promise<any>((resolve, reject) => {\n      if (\"body\" in req) {\n        resolve(req.body);\n        return;\n      }\n      let body = \"\";\n      req.on(\"data\", (chunk: any) => (body += chunk.toString()));\n      req.on(\"end\", () => {\n        try {\n          resolve(JSON.parse(body));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n    const forwardedProps = await bodyParser;\n    const response = await this.getResponse(forwardedProps, serviceAdapter);\n    const mergedHeaders = { ...headers, ...response.headers };\n    res.writeHead(200, mergedHeaders);\n    const stream = response.stream;\n    const reader = stream.getReader();\n\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        res.end();\n        break;\n      } else {\n        res.write(new TextDecoder().decode(value));\n      }\n    }\n  }\n}\n\nexport function mergeServerSideTools(\n  serverTools: ToolDefinition[],\n  clientTools?: ToolDefinition[],\n) {\n  let allTools: ToolDefinition[] = serverTools.slice();\n  const serverToolsNames = serverTools.map((tool) => tool.function.name);\n  if (clientTools) {\n    allTools = allTools.concat(\n      // filter out any client functions that are already defined on the server\n      clientTools.filter((tool: ToolDefinition) => !serverToolsNames.includes(tool.function.name)),\n    );\n  }\n  return allTools;\n}\n"],"mappings":"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","names":["success"]}